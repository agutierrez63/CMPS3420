\q
show tables
;
\h
show table;
show tables;
\dt
\h
\q
\q
\q
\q
\dt
select * from customers 
;
clear screen;
show tables;
\dt
\q
\dt
select * from customers;
\q
select * from employees;
\q
\dt
select * from customers ;
\q
selet * from items;
select * from items;
select name(*) from items;
selet * from items where name = n'items';
select * from items where name = n'items';
select * from items where name;
select name from items;
\q
show tables;
\dt
select * customers;
select *  from customers;
select *  from customers;
select *  from store;
select * register;
select * from register;
select * from district;
\dt
select * from item_category;
select * from payment;
\dt
select * from customers;
select * from sales_order;
select * from purchase_order;
select * from order_status;
select * from shipment;
select * from iteml
;
select * from item;
\dt
select * from items;
\dt
select * from region;
\q
select * from wage;
\q
show tables;
\h
view tables;
\dt
select * from customers;
clear
ls
\q
\dt
describe items;
select * from items;
select * from items;
\q
SELCT * FROM customers;
SELECT * FROM customers;
SELECT * FROM customers;
\q
SELECT employee_id, first_name, last_name FROM employee 
JOIN store 
ON Employee.StoreID = Store.StoreID
AND StoreID = '0101' 
WHERE Employee.job_type = 'General Manager'
AND Employee.job_type='Assistant Manager';
SELECT employee_id, first_name, last_name FROM employees 
JOIN store 
ON Employee.StoreID = Store.StoreID
AND storeID = '0101' 
WHERE employee.job_type = 'General Manager'
AND employee.job_type='Assistant Manager';
clear
ls
\cls
cls
;
cls;
\cls;
\?
cls
;
\q
SELECT eid, name FROM employees JOIN sales_order ON sales_order.order_id = employees.eid
WHERE sales_order;
SELECT eid, name FROM employees
JOIN store;
SELECT eid, name FROM employees JOIN store ON employee.sid = store.sid AND sid='0101';
SELECT eid, name FROM employees JOIN store ON sid = sid AND sid='0101';
SELECT eid, name FROM employees JOIN store ON sid = sid AND sid='6847';
SELECT eid, name, sid FROM employees JOIN store ON sid = sid AND sid='6847';
SELECT eid, name, sid FROM employees JOIN store AND sid IS '6847';
SELECT eid, name, sid FROM employees JOIN store WHERE sid IS '6847';
select eid, name from employee JOIN sales_order ON oid = eid JOIN items WHERE oid = id AND purchase_price < sales_price; 
select eid, name from employee JOIN sales_order ON oid = eid JOIN items WHERE purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON oid = eid JOIN items WHERE purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON oid = eid WHERE purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON order_id = eid JOIN items WHERE purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON order_id = eid WHERE purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON order_id = eid; 
select eid, name from employees JOIN sales_order ON order_id = eid JOIN items; 
select eid, name from employees JOIN sales_order ON order_id = eid JOIN items WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order, items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order,items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order AND JOIN items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
\cls
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE sales_order.id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE sales_order.order_id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE order_id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE order_id = id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE order_id = items.id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE order_id = id AND purchase_price < sales_price; 
select eid, name from employees JOIN sales_order items ON order_id = eid WHERE order_id = eid AND purchase_price < sales_price; 
SELECT employee_id, name FROM employees e JOIN sales_order so ON e.id = so.id JOIN items i ON so.id = i.id WHERE i.purchase_price < i.sales_price;
SELECT employee_id, name FROM employees e JOIN sales_order so ON e.eid = so.id JOIN items i ON so.id = i.id WHERE i.purchase_price < i.sales_price;
SELECT employee_id, name FROM employees e JOIN sales_order so ON e.eid = so.order_id JOIN items i ON so.order_id = i.id WHERE i.purchase_price < i.sales_price;
\q
ALTER TABLE order_contains ADD CONSTRAINT item_fk FOREIGN KEY (item_id) REFERENCES sales_order(item_id);
ALTER TABLE order_contains FOREIGN KEY (item_id) REFERENCES sales_order(item_id);
ALTER TABLE order_contains ADD CONSTRAINT item_fk FOREIGN KEY (item_id) REFERENCES sales_order(item_id);
SELECT eid, name, sid FROM employees JOIN store ON sid = sid AND sid='6847' JOIN wage ON job = 'general manager';
select * from employees;
SELECT employee_id, name FROM employees e JOIN sales_order so ON e.eid = so.order_id JOIN items i ON so.order_id = i.id WHERE i.purchase_price < i.sales_price;\q
select * from sales_order;
\i sql_commands/dtdb/FIND_PAST_EMPLOYEES.sql
\i sql_commands/dtdb/FIND_PAST_EMPLOYEES.sql
\i sql_commands/dtdb/FIND_PAST_EMPLOYEES.sql
alter sales_order alter column item_id not null default '0';
alter table sales_order alter column item_id not null default '0';
alter table sales_order alter column item_id int not null default '0';
ALTER TABLE sales_order ALTER COLUMN item_id SET NOT NULL DEFAULT '0';
\d employees;
select derrick from employees;
select 'Darrick Ferreira' from employees;
select 'Darrick Ferreira' from employees;
select 'Darrick Ferreira' from employees;
select name from employees;
clear
ls
;
\i sql_commands/dtdb/FIND_MANAGERS.sql
\i sql_commands/dtdb/FIND_MANAGERS.sql
\i sql_commands/dtdb/FIND_MANAGERS.sql
\i sql_commands/dtdb/FIND_MANAGERS.sql
\i sql_commands/dtdb/FIND_MANAGERS.sql
\cls
\h
\?
\i sql_commands/dtdb/FIND_EMPLOYEES.sql
\i sql_commands/dtdb/FIND_EMPLOYEES.sql
\i sql_commands/dtdb/FIND_EMPLOYEES.sql
select icid FROM item_category WHERE icid = '144489';
\d item_category;
select item_category from item_category;
select * from item_category;
\i ALTER_TABLES.sql
select * from item_category;
select * from region;
\d region
\d register;
show tables;
show tables
;
\dt
\dt sales_order;
\d sales_order;
\q
\dt
\q
select * from employees;
\dt
\d store;
\d region;
\dt
\d store
\d region;
\d store;
\d register
\dt
\d
\d sales_order;
\d order_contains;
\i sales_order.sql;
\i sales_order.sql;
\dt
drop table sales_order;
\i sales_order.sql;
CREATE TABLE sales_order(so_id INTEGER PRIMARY KEY, in_stock VARCHAR(10), date_placed DATE, date_received DATE);
\i sales_order.sql
\i sales_order.sql
slect * from sales_order;
select * from sales_order;
\i sales_order.sql
select * from sales_order;
ls
\d
\d payment;
\d items;
\d employees;
exit
exit
\q
\i sql_commands/dtdb/QUERY_1_4.sql
\i sql_commands/dtdb/QUERY_1_4.sql
\i sql_commands/dtdb/QUERY_1_4.sql
\d store
\q
select * from employees where select star from wage where wage.eid = '7';
ALTER TABLE sales_order ADD COLUMN eid VARCHAR NOT NULL;
ALTER TABLE sales_order ADD COLUMN eid VARCHAR;
\d sales_order;
\d payment;
clear
ls
;
\d sales_order;
\dt
\dt customers;
\d customers;
\d payment
\d order_contains
\d sales_order;
\d store;
\d
\d shipment
\d sales_order
\d customers
\d order_contains
\d shipment
\d store;
select * from store_inventory;
\d items;
\d department;
\d items;
\d shipment
\d order_status
\d purchase_order
\d order_contains
\d sales_order
\d customer
\d customers
\d payment
\d
\d region
\d register
ALTER TABLE register ADD CONSTRAINT register_pk PRIMARY KEY (regid);
select * from store;
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\d register
\d regsiter
\d store;
\d employees
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\
\d
\d employees
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql 
select * from store where store_id = 6601
;
select * from store_inventory where sid = 6601
;
select * from store_inventory where store_id = 6601
;
\
\d store
select * from store where sid = 
;
select * from store;
;
select * from store where sid = '6601';
;
select * from store where sid = '6601';
;
INSERT INTO store(id, address, phone_number, city, zipcode) VALUES ('6601', )
select * from store where sid = 461;
select * from store where sid = '461';
select * from order_status where id = '25';
select * from order_status where id = '20';
select * from order_status;
select * from order_status;
\i sql_commands/dtdb/QUERY_2_1.sql
\d items;
\d shipment;
\d order_status
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_3_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\i sql_commands/dtdb/QUERY_2_1.sql
\q
\dt
\dt
\q
\q
\q
\q
\q
\q
\dt
select name from item_categories;
select name from item_category;
select * from item_category;
\q
\h
\q
select * from employees;
\q
ALTER TABLE customers ADD COLUMN password VARCHAR(50) NOT NULL;
ALTER TABLE customers ADD COLUMN password VARCHAR(50);
ls
\d customers;
;
\q
ls
;
\d customers;
\q
\d customeres;
\d customers;
select * from customers where id > 90;
select * from customers where id > 990;
select * from customers where name="test";
\q
\d items;
\w
\q
\q
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
select * from customers where id > 990;
\
\q
\d customers;
\q
\dt
\q
\dt
select * from items INNER JOIN purchase_order;
select * from items INNER JOIN purchase_order ON purchase_order.purchase_id = items.id;
select item.id, item.name, item.purchase_price from items INNER JOIN purchase_order ON (purchase_order.purchase_id = items.id);
select * from items INNER JOIN purchase_order ON (purchase_order.purchase_id = items.id);
select * from items INNER JOIN purchase_order ON (purchase_order.purchase_id = items.id);
select * from items INNER JOIN purchase_order ON (purchase_order.purchase_id = items.sku);
select * from items INNER JOIN purchase_order;
select * from items INNER JOIN customers ON (purchase_order.purchase_id = customer.id);
select * from items INNER JOIN customers ON (items.id = customer.id);
select * from items INNER JOIN customers ON (items.id = customers.id);
\q
select name from customers rand() LIMIT 1;
select name from customers order by random() limit 1;
select fname from customers order by random() limit 1;
select fname, lname from customers order by random() limit 1;
SELECT fname, lname customers ORDER BY RANDOM() LIMIT 1;
\d customers;
SELECT fname, lname, address, phone_number FROM customers ORDER BY RANDOM() LIMIT 1;
\dt
\d purchase_order;
\s sales_order;
